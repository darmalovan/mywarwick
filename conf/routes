# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                         @controllers.HomeController.index
GET         /notifications                                            @controllers.HomeController.index
GET         /activity                                                 @controllers.HomeController.index
GET         /news                                                     @controllers.HomeController.index
GET         /search                                                   @controllers.HomeController.index
GET         /tiles                                                    @controllers.HomeController.redirectToIndex
GET         /tiles/:id                                                @controllers.HomeController.tile(id: String)

# NEWSTART-253
POST        /                                                         @controllers.HomeController.index

->          /sso                                                      sso.Routes

GET         /admin                                                    @controllers.admin.AdminController.index
GET         /admin/sysadmin                                           @controllers.admin.AdminController.sysadmin
GET         /admin/cluster                                            @controllers.admin.ClusterStateController.html
GET         /admin/masquerade                                         @controllers.admin.MasqueradeController.masquerade

GET         /admin/publish                                            @controllers.admin.PublishersController.index
GET         /admin/publish/:publisher                                 @controllers.admin.PublishersController.show(publisher: String)
GET         /admin/publish/:publisher/news                            @controllers.admin.NewsController.list(publisher: String)
GET         /admin/publish/:publisher/news/new                        @controllers.admin.NewsController.createForm(publisher: String)
POST        /admin/publish/:publisher/news                            @controllers.admin.NewsController.create(publisher: String)
GET         /admin/publish/:publisher/news/:id/edit                   @controllers.admin.NewsController.updateForm(publisher: String, id: String)
POST        /admin/publish/:publisher/news/:id                        @controllers.admin.NewsController.update(publisher: String, id: String)

GET         /admin/publish/:publisher/notifications                   @controllers.admin.NotificationsController.list(publisher: String)
GET         /admin/publish/:publisher/notifications/new               @controllers.admin.NotificationsController.createForm(publisher: String)
POST        /admin/publish/:publisher/notifications                   @controllers.admin.NotificationsController.create(publisher: String)
GET         /admin/publish/:publisher/notifications/:id/edit          @controllers.admin.NotificationsController.updateForm(publisher: String, id: String)
POST        /admin/publish/:publisher/notifications/:id               @controllers.admin.NotificationsController.update(publisher: String, id: String)
POST        /admin/publish/:publisher/notifications/:id/delete        @controllers.admin.NotificationsController.delete(publisher: String, id: String)

GET         /websockets/page/                                         @controllers.WebSocketController.socket

GET         /assets/manifest.json                                     @controllers.AppManifestController.getAppManifest
# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                             @controllers.Assets.versioned(path="/public", file: Asset)

GET         /service-worker.js                                        @controllers.Assets.at(path="/public", file="service-worker.js")

GET         /api/news/feed                                            @controllers.api.ReadNewsController.feed
GET         /api/news/categories                                      @controllers.api.NewsCategoriesController.categories
POST        /api/news/categories                                      @controllers.api.NewsCategoriesController.update
POST        /api/news/images                                          @controllers.api.NewsImagesController.create
GET         /api/news/images/:id                                      @controllers.api.NewsImagesController.show(id: String)

GET         /service/metrics                                          @controllers.MetricsController.metrics
GET         /service/gtg                                              @controllers.ServiceCheckController.gtg
GET         /service/healthcheck                                      @controllers.ServiceCheckController.healthcheck
GET         /service/cluster/state                                    @controllers.admin.ClusterStateController.get

GET         /api/streams/user                                         @controllers.api.UserActivitiesController.get
POST        /api/streams/read                                         @controllers.api.UserActivitiesController.markAsRead

POST        /api/streams/:providerId/notifications                    @controllers.api.IncomingActivitiesController.postNotification(providerId: String)
POST        /api/streams/:providerId/activities                       @controllers.api.IncomingActivitiesController.postActivity(providerId: String)

GET         /api/tiles                                                @controllers.api.TilesController.getLayout
GET         /api/tiles/content                                        @controllers.api.TilesController.content
GET         /api/tiles/content/:id                                    @controllers.api.TilesController.contentById(id: String)
PUT         /api/tiles                                                @controllers.api.TilesController.saveLayout

POST        /api/errors/js                                            @controllers.api.ErrorsController.js

GET         /user/info                                                @controllers.UserInfoController.info
GET         /logout                                                   @controllers.UserInfoController.logout

POST        /api/push/apns/subscribe                                  @controllers.api.APNSPushNotificationsController.subscribe
POST        /api/push/gcm/subscribe                                   @controllers.api.GCMPushNotificationsController.subscribe
POST        /api/push/gcm/notification                                @controllers.api.GCMPushNotificationsController.fetchPushNotifications

# Handle trailing slashes in URLs
GET         /*path/                                                   @controllers.HomeController.redirectToPath(path: String)

GET         /service/search/*path                                     @controllers.SearchController.proxy(path: String)
POST        /service/search/*path                                     @controllers.SearchController.proxy(path: String)
